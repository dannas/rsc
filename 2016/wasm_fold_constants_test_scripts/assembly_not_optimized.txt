f32.add_before:=> 0x7ffff7fe3067:	movss  0x6b1(%rip),%xmm0        # 0x7ffff7fe3720
f32.add_before:   0x7ffff7fe306f:	movss  0x4(%rsp),%xmm1
f32.add_before:   0x7ffff7fe3075:	addss  %xmm0,%xmm1
f32.add_before:   0x7ffff7fe3079:	movaps %xmm1,%xmm0
f32.add_before:   0x7ffff7fe307c:	jmpq   0x7ffff7fe3094

f32.sub_before:=> 0x7ffff7fe3067:	movss  0x6b1(%rip),%xmm0        # 0x7ffff7fe3720
f32.sub_before:   0x7ffff7fe306f:	movss  0x4(%rsp),%xmm1
f32.sub_before:   0x7ffff7fe3075:	subss  %xmm0,%xmm1
f32.sub_before:   0x7ffff7fe3079:	movaps %xmm1,%xmm0
f32.sub_before:   0x7ffff7fe307c:	jmpq   0x7ffff7fe3094

f64.add_before:=> 0x7ffff7fe306b:	movsd  0x6ad(%rip),%xmm0        # 0x7ffff7fe3720
f64.add_before:   0x7ffff7fe3073:	movsd  (%rsp),%xmm1
f64.add_before:   0x7ffff7fe3078:	addsd  %xmm0,%xmm1
f64.add_before:   0x7ffff7fe307c:	movapd %xmm1,%xmm0
f64.add_before:   0x7ffff7fe3080:	jmpq   0x7ffff7fe3098

f64.sub_before:=> 0x7ffff7fe306b:	movsd  0x6ad(%rip),%xmm0        # 0x7ffff7fe3720
f64.sub_before:   0x7ffff7fe3073:	movsd  (%rsp),%xmm1
f64.sub_before:   0x7ffff7fe3078:	subsd  %xmm0,%xmm1
f64.sub_before:   0x7ffff7fe307c:	movapd %xmm1,%xmm0
f64.sub_before:   0x7ffff7fe3080:	jmpq   0x7ffff7fe3098

i32.add_before:=> 0x7ffff7fe3067:	mov    0x4(%rsp),%eax
i32.add_before:   0x7ffff7fe306b:	add    $0x2,%eax
i32.add_before:   0x7ffff7fe306e:	jmpq   0x7ffff7fe3086

i32.shl_before:=> 0x7ffff7fe3062:	mov    0xc(%rsp),%eax
i32.shl_before:   0x7ffff7fe3066:	shl    %eax
i32.shl_before:   0x7ffff7fe3068:	jmpq   0x7ffff7fe3080

i32.shr_s_before:=> 0x7ffff7fe3062:	mov    0xc(%rsp),%eax
i32.shr_s_before:   0x7ffff7fe3066:	sar    %eax
i32.shr_s_before:   0x7ffff7fe3068:	jmpq   0x7ffff7fe3080

i32.shr_u_before:=> 0x7ffff7fe3062:	mov    0xc(%rsp),%eax
i32.shr_u_before:   0x7ffff7fe3066:	shr    %eax
i32.shr_u_before:   0x7ffff7fe3068:	jmpq   0x7ffff7fe3080

i32.sub_before:=> 0x7ffff7fe3067:	mov    $0x2,%eax
i32.sub_before:   0x7ffff7fe306c:	mov    0x4(%rsp),%ecx
i32.sub_before:   0x7ffff7fe3070:	sub    %eax,%ecx
i32.sub_before:   0x7ffff7fe3072:	mov    %ecx,%eax
i32.sub_before:   0x7ffff7fe3074:	jmpq   0x7ffff7fe308c

i64.add_before:=> 0x7ffff7fe306b:	mov    $0x2,%eax
i64.add_before:   0x7ffff7fe3070:	mov    (%rsp),%rcx
i64.add_before:   0x7ffff7fe3074:	add    %rax,%rcx
i64.add_before:   0x7ffff7fe3077:	mov    %rcx,%rax
i64.add_before:   0x7ffff7fe307a:	jmpq   0x7ffff7fe3092

i64.shl_before:=> 0x7ffff7fe3063:	mov    $0x1,%ecx
i64.shl_before:   0x7ffff7fe3068:	mov    0x8(%rsp),%rax
i64.shl_before:   0x7ffff7fe306d:	shl    %cl,%rax
i64.shl_before:   0x7ffff7fe3070:	jmpq   0x7ffff7fe3088

i64.shr_u_before:=> 0x7ffff7fe3063:	mov    $0x1,%ecx
i64.shr_u_before:   0x7ffff7fe3068:	mov    0x8(%rsp),%rax
i64.shr_u_before:   0x7ffff7fe306d:	shr    %cl,%rax
i64.shr_u_before:   0x7ffff7fe3070:	jmpq   0x7ffff7fe3088

i64.sub_before:=> 0x7ffff7fe306b:	mov    $0x2,%eax
i64.sub_before:   0x7ffff7fe3070:	mov    (%rsp),%rcx
i64.sub_before:   0x7ffff7fe3074:	sub    %rax,%rcx
i64.sub_before:   0x7ffff7fe3077:	mov    %rcx,%rax
i64.sub_before:   0x7ffff7fe307a:	jmpq   0x7ffff7fe3092

